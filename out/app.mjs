/* generated by Svelte v3.23.2 */
import {
  create_ssr_component,
  escape,
  is_promise,
  validate_component,
} from "../ven/sveltejs-svelte-deno/internal/index-ssr.mjs";

const App = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
  const lazy = (file) =>
    import(file).then((module) => module.default).catch((e) => {
      const err = e ?? "throw";
      console.log(err);
      throw err;
    });

  let { path = undefined } = $$props;
  let started = false;

  let transition = {
    name: "fly",
    conf: { duration: 250, x: 200 },
  };

  const changeTransition = () => {
    if (transition.name === "fly") {
      transition = { name: "slide", conf: { duration: 250 } };
    } else if (transition.name === "slide") {
      transition = {
        name: "scaleOutVertical",
        conf: { duration: 250 },
      };
    } else if (transition.name === "scaleOutVertical") {
      transition = {
        name: "fly",
        conf: { duration: 250, x: 200 },
      };
    }
  };

  if ($$props.path === void 0 && $$bindings.path && path !== void 0) {
    $$bindings.path(path);
  }
  let loadOrResetText = started && "Rest Component" || "Load Component";

  return `<div>Current Path: ${escape(path)}</div>

<button>${escape(loadOrResetText)}</button>
<button>Change Transition</button>
<span>Current Transition: ${escape(transition.name)}</span>

${
    started
      ? `${
        (function (__value) {
          if (is_promise(__value)) return ``;

          return (function (TransitionList) {
            return `
    ${
              validate_component(TransitionList, "TransitionList").$$render(
                $$result,
                { transition },
                {},
                {},
              )
            }
  `;
          })(__value);
        })(lazy("./transitionList.mjs"))
      }`
      : ``
  }`;
});

export default App;
